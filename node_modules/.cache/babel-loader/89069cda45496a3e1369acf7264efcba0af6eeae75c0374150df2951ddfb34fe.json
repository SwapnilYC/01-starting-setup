{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  // We can use multiple useState hook in one single component\n  const [enteredTitle, setEnteredTitle] = useState(''); // initially all input fields are empty/empty string\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // But if all the input are from the same form element then we can group them using object as follows\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // })\n\n  const titleChangeHandler = e => {\n    setEnteredTitle(e.target.value); // e.target.value gives the value of string present in input field\n    // following is not the correct way, although for most of the instances it will give correct output but not always\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: e.target.value\n    // })\n    // This is the correct way when yout current state is depending on the previous state\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: e.target.value }\n    // })\n  };\n\n  const amountChangeHandler = e => {\n    setEnteredAmount(e.target.value);\n  };\n  const dateChangeHandler = e => {\n    setEnteredDate(e.target.value);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    let expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseForm(expenseData); // here we are executing function that is defined in newExpense.js (transferring data from child to parent)\n    props.onAddExpense(expenseData);\n    // To empty/reset the input fields\n    setEnteredTitle(''); // entered title becomes empty string\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: enteredAmount,\n            min: \"0.5\",\n            step: .5,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: enteredDate,\n            min: \"2019-01-01\",\n            max: \"2025-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseForm","onAddExpense","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  // We can use multiple useState hook in one single component\r\n  const [enteredTitle, setEnteredTitle] = useState(''); // initially all input fields are empty/empty string\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // But if all the input are from the same form element then we can group them using object as follows\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: ''\r\n  // })\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value) // e.target.value gives the value of string present in input field\r\n    // following is not the correct way, although for most of the instances it will give correct output but not always\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: e.target.value\r\n    // })\r\n    // This is the correct way when yout current state is depending on the previous state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: e.target.value }\r\n    // })\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value)\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value)\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate)\r\n    }\r\n    props.onSaveExpenseForm(expenseData); // here we are executing function that is defined in newExpense.js (transferring data from child to parent)\r\n    props.onAddExpense(expenseData)\r\n    // To empty/reset the input fields\r\n    setEnteredTitle(''); // entered title becomes empty string\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n          <div className='new-expense__control'>\r\n            <label>Title:</label>\r\n            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}></input>\r\n          </div>\r\n          <div className='new-expense__control'>\r\n            <label>Amount:</label>\r\n            <input type=\"number\" value={enteredAmount} min=\"0.5\" step={.5} onChange={amountChangeHandler}></input>\r\n          </div>\r\n          <div className='new-expense__control'>\r\n            <label>Date:</label>\r\n            <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2025-12-31\" onChange={dateChangeHandler}></input>\r\n          </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}