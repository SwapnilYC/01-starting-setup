{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // We can use multiple useState hook in one single component\n  // const [enteredTitle, setEnteredTitle] = useState(''); // initially all input fields are empty/empty string\n  // const [enteredAmount, setEnteredAmount] = useState('');\n  // const [enteredDate, setEnteredDate] = useState('');\n\n  // But if all the input are from the same form element then we can group them using object as follows\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n  const titleChangeHandler = e => {\n    // setEnteredTitle(e.target.value) // e.target.value gives the value of string present in input field\n    setUserInput({\n      ...userInput,\n      enteredTitle: e.target.value\n    });\n  };\n  const amountChangeHandler = e => {\n    // setEnteredAmount(e.target.value)\n    setUserInput({\n      ...userInput,\n      enteredAmount: e.target.value\n    });\n  };\n  const dateChangeHandler = e => {\n    // setEnteredDate(e.target.value)\n    setUserInput({\n      ...userInput,\n      enteredDate: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.5\",\n            step: .5,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2025-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"p/UdkZQvYSiv0M8ni3DSTWcX5vE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n  // We can use multiple useState hook in one single component\r\n  // const [enteredTitle, setEnteredTitle] = useState(''); // initially all input fields are empty/empty string\r\n  // const [enteredAmount, setEnteredAmount] = useState('');\r\n  // const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // But if all the input are from the same form element then we can group them using object as follows\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: ''\r\n  })\r\n  const titleChangeHandler = (e) => {\r\n    // setEnteredTitle(e.target.value) // e.target.value gives the value of string present in input field\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredTitle: e.target.value\r\n    })\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    // setEnteredAmount(e.target.value)\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredAmount: e.target.value\r\n    })\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    // setEnteredDate(e.target.value)\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredDate: e.target.value\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className='new-expense__controls'>\r\n          <div className='new-expense__control'>\r\n            <label>Title:</label>\r\n            <input type=\"text\" onChange={titleChangeHandler}></input>\r\n          </div>\r\n          <div className='new-expense__control'>\r\n            <label>Amount:</label>\r\n            <input type=\"number\" min=\"0.5\" step={.5} onChange={amountChangeHandler}></input>\r\n          </div>\r\n          <div className='new-expense__control'>\r\n            <label>Date:</label>\r\n            <input type=\"date\" min=\"2019-01-01\" max=\"2025-12-31\" onChange={dateChangeHandler}></input>\r\n          </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;EACA;EACA;;EAEA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;IACzCO,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChC;IACAL,YAAY,CAAC;MACX,GAAGD,SAAS;MACZE,YAAY,EAAEI,CAAC,CAACC,MAAM,CAACC;IACzB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,mBAAmB,GAAIH,CAAC,IAAK;IACjC;IACAL,YAAY,CAAC;MACX,GAAGD,SAAS;MACZG,aAAa,EAAEG,CAAC,CAACC,MAAM,CAACC;IAC1B,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,iBAAiB,GAAIJ,CAAC,IAAK;IAC/B;IACAL,YAAY,CAAC;MACX,GAAGD,SAAS;MACZI,WAAW,EAAEE,CAAC,CAACC,MAAM,CAACC;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAKe,SAAS,EAAC,uBAAuB;QAAAD,QAAA,gBACpCd,OAAA;UAAKe,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACnCd,OAAA;YAAAc,QAAA,EAAO;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBnB,OAAA;YAAOoB,IAAI,EAAC,MAAM;YAACC,QAAQ,EAAEb;UAAmB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eACNnB,OAAA;UAAKe,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACnCd,OAAA;YAAAc,QAAA,EAAO;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBnB,OAAA;YAAOoB,IAAI,EAAC,QAAQ;YAACE,GAAG,EAAC,KAAK;YAACC,IAAI,EAAE,EAAG;YAACF,QAAQ,EAAET;UAAoB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACNnB,OAAA;UAAKe,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACnCd,OAAA;YAAAc,QAAA,EAAO;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBnB,OAAA;YAAOoB,IAAI,EAAC,MAAM;YAACE,GAAG,EAAC,YAAY;YAACE,GAAG,EAAC,YAAY;YAACH,QAAQ,EAAER;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNnB,OAAA;QAAKe,SAAS,EAAC,sBAAsB;QAAAD,QAAA,eACnCd,OAAA;UAAQoB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAzDKD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}